<?xml version="1.0" encoding="utf-8" standalone="yes"?>
<rss version="2.0" xmlns:atom="http://www.w3.org/2005/Atom">
  <channel>
    <title>VS code on Axiomaster&#39;s Site</title>
    <link>https://axiomaster.github.io/tags/vs-code/</link>
    <description>Recent content in VS code on Axiomaster&#39;s Site</description>
    <generator>Hugo -- gohugo.io</generator>
    <language>en-us</language>
    <lastBuildDate>Sun, 23 Jun 2019 00:00:00 +0000</lastBuildDate><atom:link href="https://axiomaster.github.io/tags/vs-code/index.xml" rel="self" type="application/rss+xml" />
    <item>
      <title>VS code remote</title>
      <link>https://axiomaster.github.io/post/2019-06-23-vscode-remote/</link>
      <pubDate>Sun, 23 Jun 2019 00:00:00 +0000</pubDate>
      
      <guid>https://axiomaster.github.io/post/2019-06-23-vscode-remote/</guid>
      <description>build 2019 微软发布了wsl2和vscode remote插件。前者使用了真正的linux内核，解决了wsl的很多问题，据说可以直接运行docker。wsl2在20H1的快速预览版18917已经可以使用。VS code remote是vscode的一组插件，包括remote ssh， remote wsl和remote container，VS code升级到1.35.1之后就可以使用了。今天我们尝试一下VS code remote的配置。
首先在VS code的Extensions中安装所有的remote插件。然后按照下方官方说明进行安装配置，这里就不多说了。
VS Code Remote Development
下面主要说一下踩到的坑。
remote ssh &amp;amp; remote wsl remote插件机制都类似，安装时会在remote虚拟机/WSl/容器内安装vscode server，由server端实际运行，本地VS code只作为界面显示。
1 remote ssh 免密登录
官方配置指导为将本地ssh公钥加入服务端信任列表中，ssh登录时可以免密登录。这里遇到的一个坑是，所有配置都正确，但ssh时总是不成功。后来发现使用的服务器之前已经配置过多次ssh免密登录了，被限制了。换了一个vm就成功了。这应该是ssh的一个限制，网上找了一个解决方法，但实测没有生效，这里就不说了。
还有一种解决方法是配置&amp;quot;remote.SSH.showLoginTerminal&amp;quot;: true使用密码登录。但这样需要多次账号密码，略麻烦。
2 下载vs code server
第一次打开remote ssh时连接的服务端需要下载vs code server， 所以需要使用的vm能够访问外网。在某些网络环境下可能需要使用vpn。
3 证书认证失败
wget下载使用https地址。使用vpn时，有些vpn会拦截替换证书。但是vm本身没有添加私有ca导致无法认证ms的证书。这里有以下3个解决方法：
 找到下载脚本，在wget后面添加--no-check-certificate  remote wsl我就是这样子解决的，但remote ssh没有找到对应的脚本，无法修改。
 将vpn的私有ca添加到os中  使用浏览器访问https地址，可以拿到ca证书。将ca证书导出，ubuntu需要导成pem(base64)格式。导出的文件后缀名为cer, 直接手动修改为crt后缀。然后把证书放入/usr/local/share/ca-certificates/目录下，并执行如下命令:
sudo update-ca-certificates  修改wget全局配置  在~/.wgetrc中添加如下配置，修改wget全局配置，不校验对端证书。当然需要自己把握风险。
check-certificate=off remote container 我是win10系统，安装了docker-for-windows。使用的是官方给的vscode-remote-try-cpp例子。
remote container会根据Dockerfile去docker.io下载debian基础镜像，然后apt安装build-essential等编译工具。</description>
    </item>
    
  </channel>
</rss>
